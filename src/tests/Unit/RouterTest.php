<?php

declare(strict_types=1);

namespace Tests\Unit;

use App\Router;
use PHPUnit\Framework\TestCase;

class RouterTest extends TestCase
{
    private Router $router;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->router = new Router();
    }

    /** @test */
    public function it_registers_a_route(): void
    {
        // when we call a register method
        $this->router->register("get", "/users", ["Users", "index"]);

        // then we assert router was registered
        $expected = [
            'get' => [
                '/users' => ['Users', 'index']
            ]
        ];

        $this->assertEquals($expected, $this->router->routes());
    }

    /** @test */
    public function it_registers_a_get_route(): void
    {
        $this->router = new Router();

        $this->router->register("get", "/users", ["Users", "index"]);

        $expected = [
            'get' => [
                '/users' => ['Users', 'index']
            ]
        ];

        $this->assertEquals($expected, $this->router->routes());
    }

    /** @test */
    public function it_registers_a_post_route(): void
    {

        $this->router->register("post", "/users", ["Users", "index"]);

        $expected = [
            'post' => [
                '/users' => ['Users', 'index']
            ]
        ];

        $this->assertEquals($expected, $this->router->routes());
    }

    /** @test */
    public function there_are_no_route_when_router_is_created(): void{
        $router = new Router();
        $this->assertEmpty($router->routes());
    }

}